/*  [소트 연산의 종류]
    1. ORDER BY : 실행계획에서는 SORT ORDER BY 연산으로 수행.
    2. GROUP BY : GROUP BY 연산과 ORDER BY 명령을 SQL문에 동시에 사용하면 SORT GROUP BY 연산으로 수행, 정렬 알고리즘을 사용해 GROUP BY 수행.
    3. 집합연산자 (DISTINCT, IN, UNION, MINUS, INTERSECT 등) : SORT UNIQUE 및 HASH UNIQUE 연산 발생.
    4. 윈도우 함수(WINDOW SORT) : Rank(), Dense_Rank(), Row_Number() 등.
    5. Sort Aggregate 연산 : 실행계획에서 SORT AGGREGATE 연산은 정렬하는것처럼 보이지만 실제론 정렬하지 않는다.
*/

-- 1. ORDER BY
EXPLAIN PLAN FOR
SELECT * FROM ITEM ORDER BY ITEM_ID;

-- 2. GROUP BY

-- 2.1 SORT GROUP BY
-- GROUP BY 와 ORDER BY 동시에 사용 시
EXPLAIN PLAN FOR
SELECT ITEM_ID, COUNT(ITEM_ID) FROM UITEM GROUP BY ITEM_ID ORDER BY ITEM_ID;

-- 2.2 HASH GROUP BY
-- GROUP BY 만 수행할땐 대부분 해시 알고리즘 사용.
EXPLAIN PLAN FOR
SELECT COUNT(*) FROM SHOP GROUP BY SHOP_NM;

-- 3. 집합연산자 (DISTINCT, IN, UNION, MINUS, INTERSECT 등)

-- 3.1 SORT UNIQUE
-- SORT(정렬) 후 UNIQUE(중복제거)
EXPLAIN PLAN FOR
SELECT DISTINCT MOD_DTS FROM ITEM ORDER BY MOD_DTS;

-- INTERSECT (중복이 제거된 교집합)
EXPLAIN PLAN FOR
SELECT ITEM_NM FROM ITEM
INTERSECT
SELECT UITEM_NM FROM UITEM
ORDER BY ITEM_NM;

-- 3.2 HASH UNIQUE
-- 중복 제거, 정렬 발생 없음.

-- UNION (합집합, 중복제거)
EXPLAIN PLAN FOR
SELECT ITEM_NM FROM ITEM
UNION
SELECT UITEM_NM FROM UITEM;

-- DISTINCT (쿼리문에 따라 SORT UNIQUE 또는 HASH UNIQUE 사용)
EXPLAIN PLAN FOR
SELECT DISTINCT SHOP_NM FROM SHOP;

-- 4. WINDOW SORT - 윈도우 함수(=분석함수) 사용 시
-- 순위함수 : RANK, DENSE_RANK, ROW_NUMBER
-- 집계함수 : SUM, MAX, MIN, AVG, COUNT
-- 행 순서 관련 함수 : FIRST_VALUE, LAST_VALUE, LAG, LEAD
EXPLAIN PLAN FOR
SELECT
    SHOP_NO
    , SHOP_NM
    , RANK() over (ORDER BY SHOP_NM)
FROM SHOP;

-- 확인
SELECT * FROM TABLE ( DBMS_XPLAN.DISPLAY );
SELECT * FROM TABLE ( DBMS_XPLAN.DISPLAY_CURSOR(NULL, NULL, 'ADVANCED ALLSTATS LAST') );
